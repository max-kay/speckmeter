use std::path::Path;

pub fn write_f32_csv(
    path: impl AsRef<Path>,
    keys: Vec<String>,
    valss: Vec<Vec<f32>>,
    header: &str,
) -> std::io::Result<()> {
    assert_eq!(keys.len(), valss.len());
    let len = valss[0].len();
    for vals in valss.iter() {
        assert_eq!(len, vals.len())
    }
    let mut string = make_csv_header(header);
    string.push_str("\n\n");

    string.push_str(&keys.join(","));
    string.push_str("\n\n");

    for i in 0..len {
        for vals in valss.iter() {
            string.push_str(&format!("{:E},", vals[i]))
        }
        string.pop();
        string.push('\n')
    }
    std::fs::write(path, string)
}

fn make_csv_header(header: &str) -> String {
    let mut header = header.to_string();
    header.push_str(
        "\nThis file was generated by Speckmeter\nhttps://github.com/messiamax/speckmeter",
    );
    header.push_str(&format!(
        "\n{}\n",
        chrono::Local::now().format("%Y %m.%d. %H:%M:%S")
    ));
    header
}
